{"version":3,"sources":["data/data.js","components/Answers.js","components/Footer.js","components/Popup.js","components/LoginForm.js","components/Welcome.js","components/SingOut.js","components/WebCam.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["data","question","answers","correct","Answers","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAnswered","classNames","correctAnswer","checkAnswer","bind","assertThisInitialized","e","elem","currentTarget","_this$props","increaseScore","answer","Number","dataset","id","updatedClassNames","setState","checkWrongAnswer","wrongAnswer","showButton","oldProps","oldState","newProps","console","log","react_default","a","createElement","onClick","className","data-id","role","React","Component","Footer","href","LoginForm","title","user","username","handleSignIn","preventDefault","refs","value","onSignIn","_this$state","style","text","buttonText","onSubmit","type","ref","placeholder","Welcome","onSignOut","SingOut","UserCam","screenshot","webcam","getScreenshot","react_webcam_default","audio","width","height","src","Main","nr","total","length","questionAnswered","score","displayPopup","nextQuestion","handleShowButton","handleStartQuiz","handleIncreaseScore","signIn","signOut","quitUser","pushData","_this$state2","navigator","getUserMedia","Fragment","WebCam","components_Welcome","components_Answers","components_SingOut","components_LoginForm","components_Footer","App","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbf52e0a.chunk.js","sourcesContent":["export default [\n    {\n        question: '¿Cuántos grados tiene un ángulo agudo?',\n        answers: ['Menos de 90', '180', '360'],\n        correct: 1\n    },\n\n    {\n        question: 'Calatayud pertenece a la provincia de?',\n        answers: ['Guadalajara', 'Zaragoza', 'Teruel'],\n        correct: 2\n    },    \n    {\n        question: 'Almendralejo se encuentra en',\n        answers: ['Sevilla', 'Badajoz', 'Cáceres'],\n        correct: 2\n    },    \n    {\n        question: '¿Cuándo se inicia la Edad Contemporánea?',\n        answers: ['1879', '1788', '1789'],\n        correct: 3\n    },\n    {\n        question: '¿Cuál es la capital de las Islas Baleares?',\n        answers: ['Palma de Mallorca', 'Ibiza', 'Menorca'],\n        correct: 1\n    }\n]","import React from 'react';\n\n\nclass Answers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAnswered: false,\n            classNames: ['', '', ''],\n            correctAnswer: true\n        }\n        \n        this.checkAnswer = this.checkAnswer.bind(this);\n    }\n    \n    checkAnswer(e) {\n        let { isAnswered } = this.props;\n        \n        if(!isAnswered) {\n            \n            let elem = e.currentTarget;\n            let { correct, increaseScore } = this.props;\n            let answer = Number(elem.dataset.id);\n            let updatedClassNames = this.state.classNames;\n\n            if(answer === correct){\n                updatedClassNames[answer-1] = 'right';\n                increaseScore();\n            }\n            else {\n                updatedClassNames[answer-1] = 'wrong';\n                this.setState({\n                    correctAnswer:false\n                })\n                this.props.checkWrongAnswer({wrongAnswer:true})\n                //this.props.quitUser({user: null})   Aqui la logica de elimnar el USER cuando falla\n            }\n            \n            this.setState({\n                classNames: updatedClassNames\n            })\n\n            this.props.showButton();\n        }\n    }\n    \n    componentDidUpdate(oldProps,oldState) {\n        const newProps = this.props\n        if(oldProps.answers !== newProps.answers) {\n          this.setState({\n            classNames:['','','']\n          })\n        }\n      }\n\n    render() {\n        let { answers } = this.props;\n        let { classNames } = this.state;\n        \n        let transition = {\n            transitionName: \"example\",\n            transitionEnterTimeout: 500,\n            transitionLeaveTimeout: 300\n        }\n        console.log('Answers-State',this.state)\n        console.log('Answers-Props',this.props)\n        \n        return (\n\n            (this.state.correctAnswer)?\n            <div id=\"answers\">\n                <ul>\n                    <li onClick={this.checkAnswer} className={classNames[0]} data-id=\"1\"><span>A</span> <p>{answers[0]}</p></li>\n                    <li onClick={this.checkAnswer} className={classNames[1]} data-id=\"2\"><span>B</span> <p>{answers[1]}</p></li>\n                    <li onClick={this.checkAnswer} className={classNames[2]} data-id=\"3\"><span>C</span> <p>{answers[2]}</p></li>\n                </ul>\n            </div>:\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Has fallado. La respuesta correcta era <strong>{this.props.answers[this.props.correct-1]}</strong>\n          </div>\n        );\n    }\n}\n\nexport default Answers","import React from 'react'\n\nclass Footer extends React.Component{\n    render() {\n        return (\n            <footer>\n                <p>Built with <span>&hearts;</span> by <a href=\"http://www.icedo-web.com/\">Icedo Web</a></p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import React from 'react';\n\nclass Popup extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            time: 'start',\n            title: 'Welcome to Quizz',\n            text: 'This is a quiz application built using ReactJS. <br /><br /> Currently it\\'s loaded with CSS questions from W3Scools, but you can easily load any type of questions into it. <br /><br /> It will dynamically load the question->answers pair and upload them into the components.' ,\n            buttonText: 'Start the quiz' \n        };\n        \n        this.popupHandle = this.popupHandle.bind(this);\n    }\n    \n    popupHandle() {\n        let  { time }   = this.state;\n\n        if(time === 'start'){\n            this.setState({\n                time: 'end',\n                title: 'Congratulations!',\n                buttonText: 'Restart'\n            });\n            \n            this.props.startQuiz();\n        } else {            \n            //location.reload();// restart the application\n        }\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            text: 'You have completed the quiz. <br /> You got: <strong>' + this.props.score + '</strong> out of <strong>' +this.props.total +'</strong> questions right.'\n        })\n    }\n    \n    createMarkup(text) {\n        return {__html: text};\n    }\n    \n    \n    render() {\n       \n        let { title, text, buttonText } = this.state;\n        \n        let { style } = this.props;\n        \n        return (\n            <div className=\"popup-container\" style={style}>\n                <div className=\"container\">\n                    <div className=\"col-md-8 col-md-offset-2\">\n                        <div className=\"popup\">\n                            <h1>{title}</h1>\n                            <p dangerouslySetInnerHTML={this.createMarkup(text)} />\n                            <button className=\"fancy-btn\" onClick={this.popupHandle}>{buttonText}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Popup","import React from 'react';\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            title: 'Crea tu usuario',\n            user: {\n                username:''\n              }\n        };\n        \n        this.handleSignIn = this.handleSignIn.bind(this)\n    }\n    \n\n    /* ------ ----- ------*/ \n    handleSignIn(e) {\n        e.preventDefault()\n        let username = this.refs.username.value\n        this.props.onSignIn(username)\n      }\n   /* ------ ----- ------*/ \n    render() {\n       \n        let { title, text, buttonText } = this.state;\n        \n        let { style } = this.props;\n        \n        return (\n            <div className=\"form-container\" style={style}>\n                <div className=\"container form-bloque\">\n                    <div className=\"col-md-8 col-md-offset-2\">\n                    <div className='thePannel'>The Pannel</div>\n                        <h1>{title}</h1>\n                            <form onSubmit={this.handleSignIn} className='formThePannel'>\n                                <input type=\"text\" ref=\"username\" placeholder=\"nombre\" className='formName'/>\n                                <input type=\"submit\" className='submitEnter' value=\"Entrar\" />\n                            </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginForm","import React from 'react';\n\nclass Welcome extends React.Component { \n    /* ------ ----- ------*/ \n    handleSignIn(e) {\n        e.preventDefault()\n        let username = this.refs.username.value\n        this.props.onSignIn(username)\n      }\n   /* ------ ----- ------*/ \n    render() {\n        console.log('welcome State',this.state)\n        console.log('welcome Props',this.props);\n        \n        return (     \n                                <div>\n                                    Bienvenido <strong>{this.props.user.username}</strong>!\n                                        <a href=\"javascript:;\" onClick={this.props.onSignOut}>Salir</a>\n                                </div>\n                       \n        );\n    }\n}\n\nexport default Welcome","import React from 'react';\n\nclass SingOut extends React.Component { \n    /* ------ ----- ------*/ \n    handleSignIn(e) {\n        e.preventDefault()\n        let username = this.refs.username.value\n        this.props.onSignIn(username)\n      }\n   /* ------ ----- ------*/ \n    render() {\n        console.log('welcome State',this.state)\n        console.log('welcome Props',this.props);\n        \n        return (     \n                                <div className='singOut singOut-btn'>\n                                        <a href=\"javascript:;\" onClick={this.props.onSignOut}>Muchas Gracias!!!</a>\n                                </div>\n                       \n        );\n    }\n}\n\nexport default SingOut","import React, { Component } from 'react';\nimport Webcam from 'react-webcam';\n\nclass UserCam extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { screenshot: null }\n        this.screenshot = this.screenshot.bind(this);\n    }\n   \n\n    // this is the area I'm having issues with. Thanks!\n    screenshot() {\n        var screenshot = this.refs.webcam.getScreenshot();\n        this.setState({screenshot: screenshot});\n      }\n\n    render(){\n\n        return (\n            <div>   \n             {<Webcam audio ={false} width={80} height={60} ref='webcam'/> }\n             <button onClick={this.screenshot}>Capture</button>\n             { this.state.screenshot ? <img src={this.state.screenshot} /> : null }\n            </div>\n            )\n    }\n}\n\nexport default UserCam;\n","import React from 'react';\nimport data from '../data/data';\nimport Answers from './Answers';\nimport Popup from './Popup';\nimport Footer from './Footer';\nimport LoginForm from './LoginForm';\nimport Welcome from './Welcome';\nimport SingOut from './SingOut';\nimport UserCam from './WebCam';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nr: 0,\n            total: data.length,\n            showButton: false,\n            questionAnswered: false,\n            score: 0,\n            displayPopup: 'flex',\n            user:null,\n            wrongAnswer: false\n\n        }\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.handleShowButton = this.handleShowButton.bind(this);\n        this.handleStartQuiz = this.handleStartQuiz.bind(this);\n        this.handleIncreaseScore = this.handleIncreaseScore.bind(this);\n        this.signIn= this.signIn.bind(this);\n        this.signOut=this.signOut.bind(this);\n        this.quitUser=this.quitUser.bind(this);\n        this.checkWrongAnswer=this.checkWrongAnswer.bind(this);\n    }\n\n    pushData(nr) {\n        this.setState({\n            question: data[nr].question,\n            answers: [data[nr].answers[0], data[nr].answers[1], data[nr].answers[2], data[nr].answers[3] ],\n            correct: data[nr].correct,\n            nr: this.state.nr + 1\n        });\n    }\n\n    componentWillMount() {\n        let { nr } = this.state;\n        this.pushData(nr);\n    }\n\n    nextQuestion() {\n        let { nr, total, score } = this.state;\n\n        if(nr === total){\n            this.setState({\n                displayPopup: 'flex'\n            });\n        } else {\n            this.pushData(nr);\n            this.setState({\n                showButton: false,\n                questionAnswered: false\n            });\n        }\n\n    }\n\n    handleShowButton() {\n        this.setState({\n            showButton: true,\n            questionAnswered: true\n        })\n    }\n\n    handleStartQuiz() {\n        this.setState({\n            displayPopup: 'none',\n            nr: 1\n        });\n    }\n\n    handleIncreaseScore() {\n        this.setState({\n            score: this.state.score + 1\n        });\n    }\n\n    // App \"actions\" (functions that modify state)\n    signIn(username) {\n    // This is where you would call Firebase, an API etc...\n    // calling setState will re-render the entire app (efficiently!)\n    this.setState({\n        user: {\n            username\n            }\n        })\n    }\n  \n    signOut() {\n        // clear out user from state\n        this.setState({user: null})\n    }\n\n    quitUser(){\n        this.setState({\n            user:null\n        })        \n    }\n\n    checkWrongAnswer(){\n        this.setState({\n            wrongAnswer:true\n        })\n    }\n\n    checkUser(){\n        \n    }\n    render() {\n        let { nr, total, question, answers, correct, showButton, questionAnswered, displayPopup, score,wrongAnswer} = this.state;\n        console.log('Main',this.state)\n        console.log('MainProps',this.props)\n        console.log('Show buttones',navigator.getUserMedia)\n        return (\n            <div className=\"container\">\n                 {(this.state.user) ? \n                 <React.Fragment>\n                     <UserCam/>\n                        <Welcome user={this.state.user} onSignOut={this.signOut.bind(this)}/>\n                        <div className=\"row\">\n                            <div className=\"col-lg-10 col-lg-offset-1\">\n                                <div id=\"question\">\n                                    <h4>Pregunta {nr}/{total}</h4>\n                                    <p>{question}</p>\n                                </div>\n                                <Answers answers={answers} correct={correct} showButton={this.handleShowButton} isAnswered={questionAnswered} increaseScore={this.handleIncreaseScore}  quitUser={this.quitUser} checkWrongAnswer ={this.checkWrongAnswer}/>\n                                <div id=\"submit\">\n                                    {wrongAnswer ? <SingOut onSignOut={this.signOut.bind(this)}/>:\n                                    \n                                        showButton ? <button className=\"fancy-btn\" onClick={this.nextQuestion} >{nr===total ? 'Finish quiz' : 'Next question'}</button> : null}\n                                </div>\n                            </div>\n                        </div>\n                    </React.Fragment>\n                    :<LoginForm onSignIn={this.signIn.bind(this)}/>}     \n                <Footer />\n            </div>\n        );\n    }\n};\n\nexport default Main","import React, { Component } from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}